[
    {
        "question": "1. 错误推测法又叫（ ）。",
        "options": [
            "A、探索性测试方法",
            "B、边界值分析法",
            "C、等价类划分法",
            "D、因果图法"
        ],
        "correct_answer": "A"
    },
    {
        "question": "2. 因果图法是一种适合于描述对于多种输入条件组合的测试方法，根据（），分析输入条件的各种组合情况，从而设计测试用例的方法",
        "options": [
            "A、输入条件的因果关系、约束关系和输出条件的组合",
            "B、输出条件的组合、约束关系和输入条件的因果关系",
            "C、输入条件的组合、约束关系和输出条件的因果关系",
            "D、约束关系的组合、输入条件和输出条件的因果关系"
        ],
        "correct_answer": "C"
    },
    {
        "question": "3. 根据输出对输入的依赖关系设计测试用例的方法是（）。",
        "options": [
            "A、路径测试",
            "B、等价类",
            "C、边界值",
            "D、因果图"
        ],
        "correct_answer": "D"
    },
    {
        "question": "4. 从用自然语言书写的程序规格说明的描述中找出因和果，从而通过因果图转换为（）。",
        "options": [
            "A、判定表",
            "B、输入表",
            "C、因果图表",
            "D、输出表"
        ],
        "correct_answer": "A"
    },
    {
        "question": "5. （）是分析和表达多逻辑条件下执行不同操作的情况的工具。",
        "options": [
            "A、等价类划分法",
            "B、判定表驱动法",
            "C、错误推测法",
            "D、边界值分析法"
        ],
        "correct_answer": "B"
    },
    {
        "question": "6. 判定表是由条件桩、动作桩、条件项和（ ）组成的。",
        "options": [
            "A、规则",
            "B、操作项",
            "C、动作项",
            "D、行动项"
        ],
        "correct_answer": "C"
    },
    {
        "question": "7. 判定表的建立包括以下步骤：确定规则的个数；（）；填入条件项；填入动作项，制定初始判定表；简化、合并相似规则或者相同动作。",
        "options": [
            "A、列出所有的条件桩和动作桩",
            "B、列出所有的条件桩",
            "C、列出所有的动作桩",
            "D、列出所有的规则"
        ],
        "correct_answer": "A"
    },
    {
        "question": "8. 正交试验法是研究多因素、多水平组合的一种试验法，它是利用（ ）来对试验进行设计。",
        "options": [
            "A、试验表",
            "B、因果图",
            "C、判定表",
            "D、正交表"
        ],
        "correct_answer": "D"
    },
    {
        "question": "9. （）就是为多因素试验、寻求最优水平组合的一种高效率的试验设计方法。",
        "options": [
            "A、等价类划分法",
            "B、因果图法",
            "C、正交试验法",
            "D、场景法"
        ],
        "correct_answer": "C"
    },
    {
        "question": "10. （）是黑盒技术设计测试用例的方法之一。",
        "options": [
            "A、循环覆盖",
            "B、逻辑覆盖",
            "C、场景法",
            "D、基本路径测试"
        ],
        "correct_answer": "C"
    },
    {
        "question": "11. 场景法一般包含基本流和（ ）。",
        "options": [
            "A、主流程",
            "B、备选流",
            "C、副流程",
            "D、备用流"
        ],
        "correct_answer": "D"
    },
    {
        "question": "12. 在任何情况下都必须使用（）。经验表明，用这种方法设计出的测试用例发现程序错误的能力最强。",
        "options": [
            "A、等价类划分法",
            "B、边界值分析方法",
            "C、因果图法",
            "D、场景法"
        ],
        "correct_answer": "B"
    },
    {
        "question": "13. 对于参数配置类的软件，要用（）选择较少的组合方式达到最佳效果。",
        "options": [
            "A、正交试验法",
            "B、等价类划分法",
            "C、因果图法",
            "D、场景法"
        ],
        "correct_answer": "A"
    },
    {
        "question": "14. 对于业务流清晰的系统，可以利用（ ）贯穿整个测试案例过程。",
        "options": [
            "A、正交试验法",
            "B、等价类划分法",
            "C、因果图法",
            "D、场景法"
        ],
        "correct_answer": "D"
    },
    {
        "question": "15. 测试的“深度”与（ ）的数量成比例。",
        "options": [
            "A、测试用例",
            "B、用户文档",
            "C、开发文档",
            "D、测试计划"
        ],
        "correct_answer": "A"
    },
    {
        "question": "16. （）构成了设计和制定测试过程的基础。",
        "options": [
            "A、测试方案",
            "B、测试用例",
            "C、测试计划",
            "D、测试报告"
        ],
        "correct_answer": "B"
    },
    {
        "question": "17. （）是测试工作的指导，是软件测试必须遵守的准则，更是软件测试质量稳定的根本保障。",
        "options": [
            "A、测试方案",
            "B、测试计划",
            "C、测试用例",
            "D、测试报告"
        ],
        "correct_answer": "C"
    },
    {
        "question": "18. 测试用例的（）指输入用户实际数据以验证系统是否满足需求规格说明书的要求；测试用例中的测试点应首先保证要至少覆盖需求规格说明书中的各项功能，并且正常。",
        "options": [
            "A、全面性",
            "B、可操作性",
            "C、连贯性",
            "D、正确性"
        ],
        "correct_answer": "D"
    },
    {
        "question": "19. 用例执行粒度尽量保持每个用例都有测点，不能同时覆盖很多功能点，否则执行起来牵连太大，所以每个用例间保持（） 很重要。",
        "options": [
            "A、连贯性",
            "B、正确性",
            "C、全面性",
            "D、可判定性"
        ],
        "correct_answer": "A"
    },
    {
        "question": "20. 测试执行结果的正确性是（ ）  的，每一个测试用例都有相应的期望结果。",
        "options": [
            "A、可操作",
            "B、可判定",
            "C、可理解",
            "D、可预期"
        ],
        "correct_answer": "B"
    },
    {
        "question": "21. 测试用例的（），列举执行测试用例的所有输入内容或者条件。",
        "options": [
            "A、输入条件",
            "B、输入规范",
            "C、输入说明",
            "D、输入要求"
        ],
        "correct_answer": "C"
    },
    {
        "question": "22. 测试用例内容包括测试目标、测试环境、（ ）、测试步骤、预期结果、测试脚本等。",
        "options": [
            "A、数据格式",
            "B、输出数据",
            "C、数据结构",
            "D、输入数据"
        ],
        "correct_answer": "D"
    },
    {
        "question": "23. 测试用例可以分为基本事件、（） 和异常事件。",
        "options": [
            "A、备选事件",
            "B、主事件",
            "C、后备事件",
            "D、次事件"
        ],
        "correct_answer": "A"
    },
    {
        "question": "24. 测试用例设计必须明确（）和测试分类的程度。",
        "options": [
            "A、标准",
            "B、粒度",
            "C、范围",
            "D、复杂度"
        ],
        "correct_answer": "B"
    },
    {
        "question": "25. 测试结果的可判定性,即测试执行结果的正确性是可判定的，每一个测试用例都应有相应的（ ）。",
        "options": [
            "A、输出结果",
            "B、理想结果",
            "C、期望结果",
            "D、测试结果"
        ],
        "correct_answer": "C"
    },
    {
        "question": "26. 设计的用例除对测试点本身的测试外，还需考虑用户实际使用的情况、与其他部分关联使用的情况、（） 操作和环境设置等。",
        "options": [
            "A、正常情况",
            "B、输入",
            "C、输出",
            "D、非正常情况"
        ],
        "correct_answer": "D"
    },
    {
        "question": "27. 覆盖率是度量测试（） 的一个手段，是测试有效性的一个度量。",
        "options": [
            "A、完整性",
            "B、全面性",
            "C、科学性",
            "D、规范化"
        ],
        "correct_answer": "A"
    },
    {
        "question": "28. 测试覆盖指测试系统覆盖被测试系统的程度，一项给定测试或一组测试对某个给定系统或构件的所有指定（）进行处理所达到的程度。",
        "options": [
            "A、测试记录",
            "B、测试用例",
            "C、测试结果",
            "D、测试计划"
        ],
        "correct_answer": "B"
    },
    {
        "question": "29. 测试覆盖是由测试需求和（）的覆盖或已执行代码的覆盖表示的。",
        "options": [
            "A、测试内容",
            "B、测试项目",
            "C、测试用例",
            "D、测试结果"
        ],
        "correct_answer": "C"
    },
    {
        "question": "30. 测试用例按（ ）顺序执行。",
        "options": [
            "A、复杂度",
            "B、时间",
            "C、随机",
            "D、优先级"
        ],
        "correct_answer": "D"
    },
    {
        "question": "31. 在测试前提符合的情况下，依照（），每一个测试用例都能够顺利地使程序运行，同时呈现相应的期望结果。",
        "options": [
            "A、测试步骤",
            "B、测试说明",
            "C、测试用例",
            "D、测试要求"
        ],
        "correct_answer": "A"
    },
    {
        "question": "32. 测试用例（）越高，被执行的时间越早，执行的频率越高。",
        "options": [
            "A、复杂度",
            "B、优先级",
            "C、编制时间",
            "D、对应问题的严重级别"
        ],
        "correct_answer": "B"
    },
    {
        "question": "33. 在测试过程中发现测试用例未覆盖全部需求时，需要（）测试用例。",
        "options": [
            "A、修改",
            "B、变更",
            "C、补充",
            "D、删除"
        ],
        "correct_answer": "C"
    },
    {
        "question": "34. 如果存在两个或更多测试用例对一组相同的输入和输出进行测试，则需要对其进行（ ）。",
        "options": [
            "A、修改",
            "B、变更",
            "C、新增",
            "D、删除"
        ],
        "correct_answer": "D"
    },
    {
        "question": "35. 测试用例的维护是一个（）的过程，也是一个不断改进和完善的过程。",
        "options": [
            "A、长期",
            "B、短期",
            "C、变化",
            "D、稳定"
        ],
        "correct_answer": "A"
    },
    {
        "question": "36. 通过手工测试无法做到覆盖所有（）。",
        "options": [
            "A、软件功能",
            "B、代码路径",
            "C、业务流程",
            "D、菜单项"
        ],
        "correct_answer": "B"
    },
    {
        "question": "37. 许多与时序、（）、资源冲突、多线程等有关的错误通过手工测试很难捕捉到。",
        "options": [
            "A、资源",
            "B、功能",
            "C、流程",
            "D、死锁"
        ],
        "correct_answer": "D"
    },
    {
        "question": "38. （ ）是由测试工程师手动测试软件各项功能以发现缺陷的过程。",
        "options": [
            "A、手工测试",
            "B、自动化测试",
            "C、功能测试",
            "D、性能测试"
        ],
        "correct_answer": "A"
    },
    {
        "question": "39. （ ）是把以人为驱动的测试行为转化为机器执行的一种过程。",
        "options": [
            "A、手工测试",
            "B、自动化测试",
            "C、功能测试",
            "D、性能测试"
        ],
        "correct_answer": "B"
    },
    {
        "question": "40. 实施自动化测试之前需要对（）进行分析，以观察其是否适合使用自动化测试。",
        "options": [
            "A、软件需求过程",
            "B、软件设计过程",
            "C、软件开发过程",
            "D、软件测试过程"
        ],
        "correct_answer": "C"
    },
    {
        "question": "41. 为了节省人力、时间或硬件资源，提高（），便引入了自动化测试的概念。",
        "options": [
            "A、测试效率",
            "B、设计效率",
            "C、开发效率",
            "D、项目进度"
        ],
        "correct_answer": "A"
    },
    {
        "question": "42. 自动化软件测试工具是用软件来代替一些人工输入，其存在的价值是为了提高（）。",
        "options": [
            "A、产品质量",
            "B、测试质量",
            "C、测试准确度",
            "D、测试效率"
        ],
        "correct_answer": "D"
    },
    {
        "question": "43. 测试管理工具是为了复用（ ），提高软件测试的价值。",
        "options": [
            "A、测试方案",
            "B、测试计划",
            "C、测试用例",
            "D、测试报告"
        ],
        "correct_answer": "C"
    },
    {
        "question": "44. 一个好的软件测试工具和测试管理工具结合起来使用将会使软件（）大大的提高。",
        "options": [
            "A、开发质量",
            "B、测试效率",
            "C、测试准确度",
            "D、文档质量"
        ],
        "correct_answer": "B"
    },
    {
        "question": "45. 按测试工具的收费方式，可分为（）。",
        "options": [
            "A、集成测试和单元测试",
            "B、白盒测试和黑盒测试",
            "C、商业测试工具和开源测试工具",
            "D、白盒测试和静态测试"
        ],
        "correct_answer": "C"
    },
    {
        "question": "46. 软件测试工具按照其用途，可分为测试管理、自动化功能测试工具、（）、白盒测试工具。",
        "options": [
            "A、手工测试工具",
            "B、开源测试工具",
            "C、商业测试工具",
            "D、性能测试工具"
        ],
        "correct_answer": "D"
    },
    {
        "question": "47. 一般针对代码进行测试，测试中发现的缺陷可以定位到代码级的测试工具是（ ）。",
        "options": [
            "A、白盒测试工具",
            "B、开源测试工具",
            "C、商业测试工具",
            "D、黑盒测试工具"
        ],
        "correct_answer": "A"
    },
    {
        "question": "48. 测试工具的选择是（）的一个重要步骤之一。",
        "options": [
            "A、手工测试",
            "B、自动化测试",
            "C、功能测试",
            "D、性能测试"
        ],
        "correct_answer": "B"
    },
    {
        "question": "49. 自动化测试的成功主要在于为不同的需求确定（ ）的工具。",
        "options": [
            "A、合适",
            "B、功能强大",
            "C、知名度高",
            "D、价格高"
        ],
        "correct_answer": "A"
    },
    {
        "question": "50. 在选择测试工具时，不仅要考虑性能价格比、产品的成熟度，还要考虑测试工具引入的（）。",
        "options": [
            "A、效率",
            "B、安全性",
            "C、连续性",
            "D、可靠性"
        ],
        "correct_answer": "C"
    },
    {
        "question": "51. 一般来说，GUI功能测试工具的测试过程包括（）。",
        "options": [
            "A、录制测试脚本、编辑测试脚本、执行、调试测试脚本、分析测试结果",
            "B、录制测试脚本、调试测试脚本、执行、导出测试脚本、分析测试结果",
            "C、录制测试脚本、调试测试脚本、编辑测试脚本、执行、分析测试结果",
            "D、录制测试脚本、编辑测试脚本、调试测试脚本、执行、分析测试结果"
        ],
        "correct_answer": "D"
    },
    {
        "question": "52. （）是一个用于Web应用程序自动化测试工具。",
        "options": [
            "A、禅道",
            "B、Selenium",
            "C、LoadRunner",
            "D、Burp",
            "suite"
        ],
        "correct_answer": "B"
    },
    {
        "question": "53. JMeter 能够对应用程序做功能测试与回归测试，通过创建带有（ ）的脚本来验证程序是否返回了期望结果。",
        "options": [
            "A、数据",
            "B、断言",
            "C、逻辑",
            "D、巡检"
        ],
        "correct_answer": "B"
    },
    {
        "question": "54. 压力测试（StressTesting）又称强度测试，其目标是（）。",
        "options": [
            "A、检测系统可以处理目标内确定的数据容量",
            "B、度量系统的性能和预先定义的目标有多大差距",
            "C、测试各种资源在超负荷的情况下的运行情况",
            "D、验证系统从软件或者硬件失效中恢复的能力"
        ],
        "correct_answer": "C"
    },
    {
        "question": "55. （）是一种适用于各种体系架构的自动负载测试工具，它能预测系统行为并优化系统性能。",
        "options": [
            "A、QTP",
            "B、SilkTest",
            "C、Selenium",
            "D、LoadRunner"
        ],
        "correct_answer": "D"
    },
    {
        "question": "56. JMeter能够对HTTP和FTP服务器进行压力和性能测试，也可以通过JDBC对任何（）进行同样的测试。",
        "options": [
            "A、数据库",
            "B、接口",
            "C、网络",
            "D、Web安全"
        ],
        "correct_answer": "A"
    },
    {
        "question": "57. （）是一个可以用于攻击Web应用程序的集成平台。",
        "options": [
            "A、Burp",
            "suite",
            "B、SilkTest",
            "C、QTP",
            "D、LoadRunner"
        ],
        "correct_answer": "A"
    },
    {
        "question": "58. （）可以支持的常见故障排除问题包括程序包丢失,潜在问题和恶意网络活动。",
        "options": [
            "A、SilkTest",
            "B、Wireshark",
            "C、QTP",
            "D、LoadRunner"
        ],
        "correct_answer": "B"
    },
    {
        "question": "59. 安全测试是一个非常复杂的过程，安全测试所使用到的工具也非常多，例如（）、端口扫描工具、抓包工具、渗透工具等。",
        "options": [
            "A、性能测试工具",
            "B、功能测试工具",
            "C、漏洞扫描工具",
            "D、测试管理工具"
        ],
        "correct_answer": "C"
    },
    {
        "question": "60. 缺陷跟踪管理系统主要完成对（ ）的记录、分析和状态更新等管理。",
        "options": [
            "A、开发文档",
            "B、测试计划",
            "C、测试报告",
            "D、缺陷报告"
        ],
        "correct_answer": "D"
    },
    {
        "question": "61. （）缺陷跟踪系统的主要目标在于为改正那些应该改正的缺陷提供帮助。",
        "options": [
            "A、漏洞扫描工具",
            "B、功能测试工具",
            "C、缺陷跟踪系统",
            "D、测试管理工具"
        ],
        "correct_answer": "C"
    },
    {
        "question": "62. 在开源项目管理软件中，（）禅道是比较流行的缺陷管理系统之一。",
        "options": [
            "A、禅道",
            "B、SilkTest",
            "C、QTP",
            "D、LoadRunner"
        ],
        "correct_answer": "A"
    },
    {
        "question": "62. 在开源项目管理软件中，（）禅道是比较流行的缺陷管理系统之一。",
        "options": [
            "A、禅道",
            "B、SilkTest",
            "C、QTP",
            "D、LoadRunner"
        ],
        "correct_answer": "A"
    }
]