[
    {
        "question": "1. MySQL中，可以使用CHAR和VARCHAR数据类型来存储字符串，其中CHAR是定长的，VARCHAR是变长的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "2. 在MySQL数据库中，DESC与DESCRIBE两者用法相同，都是用来显示已经建立的数据表文件。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "3. 在MySQL数据库中，将一个Tab表中INTEGER列的名称从A修改成B，可以使用“ALTER TABLE Tab CHANGE A B INTEGER。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "4. 在MySQL数据库中，同时删除多个数据表时，需要使用分号进行分割。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "5. 外键是表中一列或多列的一组，其值能唯一地标识表中的每一行。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "6. 在对表进行查询时，有时对所查询的某些列希望得到的是一种概念而不是具体的数据时，可以使用CASE表达式。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "7. MySQL中，可以使用%和_两个通配符来进行模糊匹配，其中%表示任意长度的任意字符，_表示单个任意字符。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "8. 在MySQL的SELECT语句中，可以使用DISTINCT消除结果集中的重复行。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "9. WHERE子句会根据条件对FROM子句的中间结果中的行逐一进行判断，当条件为TRUE时，该行就被包含到WHERE子句的中间结果中。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "10. MySQL中，可以使用LIMIT 0来查询出空的结果集。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "11. MySQL中，可以使用IS NULL和IS NOT NULL运算符来判断一个值是否为空。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "12. 在MySQL中，如果没有指定ASC或DESC选项，ORDER BY子句默认按照降序排序。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "13. 在MySQL中，如果使用union操作符连接两个或多个select语句，那么结果集合中的列名通常等于第一个select语句中的列名。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "14. 在MySQL中，如果使用GROUP BY子句对表进行分组，那么SELECT子句中只能出现分组字段或者聚合函数。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "15. 在MySQL的分组条件语句中，having子句是在select子句之前执行，group by子句之后执行的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "16. ALTER TABLE命令可用于更改原有表的结构，如：增加或删减列、创建或取消索引、更改原有列的类型、重命名列或表，还可以更改表的评注与表的类型。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "17. 在MySQL中，DROP是 DML 语句，操作完以后如果没有不想提交事务还可以回滚TRUNCATE 和 DELETE是 DDL 语句，操作完马上生效，不能回滚。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "18. 在MySQL中，使用TRUNCATE TABLE语句在功能上与使用WHERE子句的DELETE语句在功能上是相同的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "19. 在MySQL中，聚合函数常用于对一组值进行计算，然后返回单个值。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "20. 在MySQL中，使用LENGTH()函数可以获取字符串的字符数，而不是字节数。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "21. 在MySQL中，使用DATE_FORMAT()函数可以将日期或时间值格式化为指定的格式。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "22. 在MySQL中，常见的流程控制语句有IF语句、CASE语句、SWITCH语句、LOOP语句、WHILE语句和LEAVE语句。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "23. 笛卡尔积不仅是将各个表中的信息进行排列组合，同时也对信息进行了有效筛选。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "24. 在MySQL中，使用JOIN子句和使用INNER JOIN子句是等价的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "25. MySQL中使用左连接时，必须在FROM子句后指定LEFT JOIN关键字。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "26. MySQL中使用自连接时，可以在SELECT子句中引用同一张表的同一列。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "27. from子查询可以使用聚合函数和分组函数。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "28. 相关子查询的结果可以作为外部查询的数据源。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "29. EXISTS子查询可以返回多个值。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "30. 在java.util.List接口的实现类中，元素是有序的并且可以重复。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "31. 在java.util.List接口的实现类java.util.ArrayList所表示的集合中，数据结构底层由数组来实现，能够精确地控制每个元素的插入位置，或者删除某个位置的元素，对元素的随机访问速度特别快。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "32. LinkedList增删效率比ArrayList高。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "33. 在使用Iterator对集合中的元素进行遍历时,如果调用了集合对象的remove()方法删 除元素,然后继续使用Iterator遍历元素,会出现异常。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "34. 在Java的集合框架中,Set集合是通过键值对的方式来存储对象的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "35. 在Java集合框架中Map接口的V remove(Object key)移除所有的键值对元素。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "36. 泛型类型必须是引用类型，不能是基本数据类型。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "37. 使用Collections工具类中的sort()方法可以对List集合进行排序。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "38. Java系统的标准输入对象是System.in，标准输出对象有两个，分别是System.out和System.err。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "39. File类中的list()方法用于得到所有子目录下的File类型对象。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "40. 字节流只能用来读写二进制文件。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "41. BufferedReader类的readLine()方法，如果读到流的末尾，该方法返回的结果为null。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "42. 在Java I/O应用中用户可以自定义自己的异常类。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "43. 程序开发者必须创建一个线程去管理内存的分配。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "44. 多线程没有安全问题。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "45. 当线程类所定义的run()方法执行完毕，线程的运行就会终止。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "46. 线程的优先级是不能改变的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "47. 一个线程让另一个线程不能执行，它可以对第二个线程调用yield()方法。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "48. 使用JDBC的应用程序可以直接与不同的数据库进行连接，而不需要依赖于底层数据库驱动。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "49. 数据库不是JDBC的组成部分。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "50. 对于相同的SQL语句，Statement对象每次执行时，都会对其进行编译。（ )",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "51. PreparedStatement是Statement的子接口，用于执行预编译的SQL语句。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "52. 应用程序可以直接与不同的数据库进行连接,而不需要依赖于底层数据库驱动程序。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "53. TCP是一种用户数据报协议。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "54. IPv4版本的IP地址使用4个字节来表示，IPv6的IP版本地址使用8个字节来表示。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "55. Socket是传输层供给应用层的编程接口，是应用层与传输层之间的桥梁 。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "56. 在基于TCP的SOCKET通讯流程中，服务端模块一般会通过connect命令向客户端发起连接请求。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "57. Socket类的方法 shutdownInput和shutdownOutput的作用是关闭相应的输入、输出流，不关闭网络连接。它将输入、输出流移动到末尾，再没有数据可以读写了，将以后发过来的数据忽略掉。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "58. 由于UDP是面向无连接的协议，可以保证数据的完整性，因此在传输重要数据时建议使用UDP协议。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "59. java.net包中的DatagramPacket类用于封装UDP通信中发送或者接收的数据。",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "60. DatagramSocket类中提供了accept()方法,用于接收数据报包。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "61. TCP/IP可以提供异构网络之间的互连。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "62. TCP是一种面向连接的、可靠的传输协议，它使用三次握手来建立连接，并使用数据包确认和重传机制来确保数据的可靠性。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "63. 死锁的产生有四个必要条件：互斥使用、不可抢占、请求和保持、循环等待。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "64. 据Standish Group的统计，软件的缺陷所造成的损失，相当大的部分是由于测试失败所引起的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "65. 软件部署过程中需要关注的问题有：安装和系统运行的变更管理、构件之间的相依、协调、内容发放、管理异构平台、部署过程的可变更性、与互联网的集成和安全性。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "66. 分布式架构可以理解为“中央集权式”的部署。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "67. 集中式部署是将所有的应用软件都部署在服务器。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "68. 集中式部署的设计原则是便捷性、安全性、可靠性、灵活性。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "69. 集中式部署方案的特点是信息集中共享、访问速度快、维护方便。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "70. 分布式部署环境下，用户使用任务功能都必须连接外部网络，所以外部网络的稳定是用户使用系统的前提。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "71. 分布式部署环境下，数据交换需要经过数据导出、数据传输、数据导入。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "72. 在分布式部署环境下，数据都保存在自己的数据库中，所以数据隔离的程度高，数据备份比较方便。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "73. 远程调试用来查找程序运行中的错误，也可以用来优化程序的性能。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "74. 如果通过调试器执行远程调试或使用进程服务器，则可以在客户端与服务器之间添加中继器。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "75. 用Windows内核调试引擎进行主动内核调试需要两台机器，通过串口、1394接口或USB 2.0连接，属于远程调试。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "76. 直接通过调试器进行远程调试通常是执行远程调试的最佳且最简单的方法。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "77. Eclipse IDE具备开发和调试的高级特性，使其成为一个全面的工具。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "78. 测试环境的建立是测试工作的基础。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "79. 测试环境适合与否不会影响测试结果的真实性和正确性。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "80. 硬件、网络环境是测试环境中的最基本的两个要素。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "81. 通过虚拟机，可以在单个计算机上并发运行多个操作系统。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "82. 测试策略和测试方法对测试环境的设计没有影响。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "83. 自动化部署需要考虑当前版本部署失败时，能够恢复到上一个版本的状态。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "84. 对测试环境的变更应当形成一个标准的流程，并保证每次变更都是可追溯的和可控的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "85. 软件测试和软件开发一样，是一个比较复杂的工作过程，如果无章法可循，随意进行测试势必会造成测试工作的混乱。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "86. 单元测试可看作是编码工作的一部分，应该由程序员完成。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "87. 集成测试着重于集成版本的外部接口的行为。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "88. 通过集成测试之后，软件已完全组装起来，接口方面的错误也已排除，确认测试即可开始。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "89. 系统测试的目的是检验被测代码的功能是否正确。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "90. 验收测试是部署软件之前的最后一个测试操作。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "91. 选择回归测试策略应该兼顾效率和有效性两个方面。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "92. 白盒测试通过检查软件内部的逻辑结构，对软件中的逻辑路径进行覆盖测试。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "93. 使用语句覆盖法进行测试用例设计时，能够准确的判断运算中的逻辑关系错误。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "94. 白盒测试的“条件覆盖”标准强于“判定覆盖”。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "95. 软件测试中条件覆盖不一定包含判定覆盖。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "96. 满足“条件组合覆盖”的测试用例是一定满足“判定覆盖”、“条件覆盖”和“判定/条件覆盖”的。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "97. 只要能够达到100%的逻辑覆盖率，就可以保证程序的正确性。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "98. 程序控制流图是描述程序控制流的一种图示方法。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "A"
    },
    {
        "question": "99. 黑盒测试又称结构测试、透明盒测试、逻辑驱动测试或基于代码的测试。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    },
    {
        "question": "100. 边界值分析法是一种典型的白盒测试法。（ ）",
        "options": [
            "A、正确",
            "B、错误"
        ],
        "correct_answer": "B"
    }
]